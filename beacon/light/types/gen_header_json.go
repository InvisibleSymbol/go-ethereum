// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package types

import (
	"encoding/json"

	"github.com/ethereum/go-ethereum/common"
)

var _ = (*headerMarshaling)(nil)

// MarshalJSON marshals as JSON.
func (h Header) MarshalJSON() ([]byte, error) {
	type Header struct {
		Slot          common.Decimal
		ProposerIndex common.Decimal
		ParentRoot    common.Hash
		StateRoot     common.Hash
		BodyRoot      common.Hash
	}
	var enc Header
	enc.Slot = common.Decimal(h.Slot)
	enc.ProposerIndex = common.Decimal(h.ProposerIndex)
	enc.ParentRoot = h.ParentRoot
	enc.StateRoot = h.StateRoot
	enc.BodyRoot = h.BodyRoot
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (h *Header) UnmarshalJSON(input []byte) error {
	type Header struct {
		Slot          *common.Decimal
		ProposerIndex *common.Decimal
		ParentRoot    *common.Hash
		StateRoot     *common.Hash
		BodyRoot      *common.Hash
	}
	var dec Header
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.Slot != nil {
		h.Slot = uint64(*dec.Slot)
	}
	if dec.ProposerIndex != nil {
		h.ProposerIndex = uint64(*dec.ProposerIndex)
	}
	if dec.ParentRoot != nil {
		h.ParentRoot = *dec.ParentRoot
	}
	if dec.StateRoot != nil {
		h.StateRoot = *dec.StateRoot
	}
	if dec.BodyRoot != nil {
		h.BodyRoot = *dec.BodyRoot
	}
	return nil
}
